// ----------------------------------------------------------------------------
// 
// json.cpp
// Copyright (c) 2009 Ansca, Inc. All rights reserved.
// 
// Reviewers:
// 		
// 
// ----------------------------------------------------------------------------

#include "Core/Rtt_Build.h"

#include "Rtt_Lua.h"

#ifndef LUAOPEN_API 
#define LUAOPEN_API 
#endif

// ----------------------------------------------------------------------------

namespace Rtt
{

// ----------------------------------------------------------------------------

static const unsigned char B1[]={
 27, 76,117, 97, 81,  0,  1,  4,  4,  4,  8,  0,  3,  0,  0,  0, 61, 63,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  6, 22,  0,  0,  0,  5,  0,  0,  0, 65,
 64,  0,  0, 28,128,  0,  1, 70,128, 64,  0,129,192,  0,  0, 85,128,128,  0,  9,
 64,  0,129, 70,  0, 65,  0,134, 64, 65,  0,228,  0,  0,  0,  0,  0,128,  0, 36,
 65,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,100,129,  0,  0,  0,  0,128,  0,  0,
  0,  0,  2,  9,192,  0,130,  9,  0,129,130,  9, 64,  1,131, 30,  0,  0,  1, 30,
  0,128,  0,  7,  0,  0,  0,  4,  8,  0,  0,  0,114,101,113,117,105,114,101,  0,
  4,  7,  0,  0,  0,100,107,106,115,111,110,  0,  4,  8,  0,  0,  0,118,101,114,
115,105,111,110,  0,  4,  3,  0,  0,  0, 45, 49,  0,  4,  7,  0,  0,  0,100,101,
 99,111,100,101,  0,  4,  7,  0,  0,  0,101,110, 99,111,100,101,  0,  4,  9,  0,
  0,  0,112,114,101,116,116,105,102,121,  0,  3,  0,  0,  0,  0,  0,  0,  0, 22,
  0,  0,  0, 30,  0,  0,  0,  1,  3,  3,  9, 14,  0,  0,  0, 23,  0, 64,  0, 22,
192,  0,128,  5, 65,  0,  0, 65,129,  0,  0, 28, 65,  0,  1, 22,128,  1,128,  4,
  1,  0,  0, 64,  1,  0,  0,128,  1,128,  0,192,  1,  0,  1, 37,  2,  0,  0, 29,
  1,  0,  0, 30,  1,  0,  0, 30,  0,128,  0,  3,  0,  0,  0,  0,  4,  6,  0,  0,
  0,101,114,114,111,114,  0,  4, 35,  0,  0,  0,106,115,111,110, 46,100,101, 99,
111,100,101, 32, 99, 97,108,108,101,100, 32,119,105,116,104, 32,110,105,108, 32,
115,116,114,105,110,103,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0, 32,  0,  0,  0, 44,  0,  0,  0,  2,  2,  0,  5, 16,
  0,  0,  0, 23,  0,192,  0, 22, 64,  0,128,138,  0,  0,  0, 64,  0,  0,  1,134,
 64,192,  0, 23,  0, 64,  1, 22,128,  0,128,132,  0,  0,  0,134,128, 64,  1, 73,
128,128,128,132,  0,128,  0,192,  0,  0,  0,  0,  1,128,  0,157,  0,128,  1,158,
  0,  0,  0, 30,  0,128,  0,  3,  0,  0,  0,  0,  4, 10,  0,  0,  0,101,120, 99,
101,112,116,105,111,110,  0,  4, 16,  0,  0,  0,101,110, 99,111,100,101,101,120,
 99,101,112,116,105,111,110,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0, 46,  0,  0,  0, 79,  0,  0,  0,  2,  1,  0, 10,
 76,  0,  0,  0, 23,  0, 64,  0, 22,192,  0,128,197, 64,  0,  0,  1,129,  0,  0,
220, 64,  0,  1, 22,192, 11,128,197,192,  0,  0,  0,  1,  0,  0,220,128,  0,  1,
 23,  0,193,  1, 22,192,  6,128,203, 64, 65,  0,220,128,  0,  1,  4,  1,  0,  0,
 64,  1,  0,  0, 28,  1,  1,  1,128,  0,  0,  3, 64,  0,128,  2,  0,  0,  0,  2,
 87,  0, 64,  1, 22, 64,  2,128,  5, 65,  0,  0, 65,129,  1,  0,133,193,  1,  0,
192,  1,  0,  1,156,129,  0,  1, 85,129,129,  2, 28, 65,  0,  1,  3,  1,  0,  2,
 30,  1,  0,  1, 22,128,  5,128, 24,192,128,  0, 22,  0,  5,128,  5,  1,  2,  0,
 65, 65,  2,  0, 28, 65,  0,  1,  3,  1,  0,  2, 30,  1,  0,  1, 22,128,  3,128,
197,192,  0,  0,  0,  1,  0,  0,220,128,  0,  1, 87,128,194,  1, 22, 64,  2,128,
197, 64,  0,  0,  1,193,  2,  0, 69,193,  0,  0,128,  1,  0,  0, 92,129,  0,  1,
129,  1,  3,  0, 21,129,  1,  2,220, 64,  0,  1,195,  0,128,  1,222,  0,  0,  1,
202,  0,  0,  0,  5, 65,  3,  0, 64,  1,  0,  0, 28,  1,  1,  1, 22,128,  0,128,
 84,  2,128,  1, 76,130,195,  4,201,192,129,  4, 33,129,  0,  0, 22,128,254,127,
  5,129,  2,  0,  6,193, 67,  2, 64,  1,128,  1, 28, 65,  0,  1,  4,  1,128,  0,
 64,  1,  0,  0,138,129,  0,  0,137, 65, 68,136,137,193,  0,137, 29,  1,128,  1,
 30,  1,  0,  0, 30,  0,128,  0, 19,  0,  0,  0,  0,  4,  6,  0,  0,  0,101,114,
114,111,114,  0,  4, 37,  0,  0,  0,106,115,111,110, 46,112,114,101,116,116,105,
102,121, 32, 99, 97,108,108,101,100, 32,119,105,116,104, 32,110,105,108, 32,115,
116,114,105,110,103,  0,  4,  5,  0,  0,  0,116,121,112,101,  0,  4,  7,  0,  0,
  0,115,116,114,105,110,103,  0,  4,  4,  0,  0,  0,108,101,110,  0,  4, 31,  0,
  0,  0,106,115,111,110, 46,112,114,101,116,116,105,102,121, 58, 32,105,110,118,
 97,108,105,100, 32,105,110,112,117,116, 58, 32,  0,  4,  9,  0,  0,  0,116,111,
115,116,114,105,110,103,  0,  4,  6,  0,  0,  0,112,114,105,110,116,  0,  4, 50,
  0,  0,  0, 87, 97,114,110,105,110,103, 58, 32,106,115,111,110, 46,112,114,101,
116,116,105,102,121, 58, 32,101,120,116,114, 97, 32,100, 97,116, 97, 32, 97,116,
 32,101,110,100, 32,111,102, 32, 74, 83, 79, 78,  0,  4,  6,  0,  0,  0,116, 97,
 98,108,101,  0,  4, 46,  0,  0,  0,106,115,111,110, 46,112,114,101,116,116,105,
102,121, 32,116, 97,107,101,115, 32, 97, 32,115,116,114,105,110,103, 32,111,114,
 32, 97, 32,116, 97, 98,108,101, 32, 40,103,111,116, 32,  0,  4,  2,  0,  0,  0,
 41,  0,  4,  6,  0,  0,  0,112, 97,105,114,115,  0,  3,  0,  0,  0,  0,  0,  0,
240, 63,  4,  5,  0,  0,  0,115,111,114,116,  0,  4,  7,  0,  0,  0,105,110,100,
101,110,116,  0,  1,  1,  4,  9,  0,  0,  0,107,101,121,111,114,100,101,114,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,
};

LUAOPEN_API int
luaload_json(lua_State *L)
{
	return luaL_loadbuffer(L,(const char*)B1,sizeof(B1),"json");
}

// ----------------------------------------------------------------------------

} // namespace Rtt

// ----------------------------------------------------------------------------
